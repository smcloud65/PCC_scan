# scan.yml

on: [push, pull_request]

name: SCA and Build and Scan
env:
  # The Prisma Cloud user with the CI User role
  TL_USER: ${{ secrets.TL_USER }}
  # The password for this user account
  TL_PASS: ${{ secrets.TL_PASS }}
  # The base URL for the Console -- http://console.<my_company>.com:8083 -- without a trailing /
  TL_CONSOLE_URL: ${{ secrets.TL_CONSOLE_URL }}
  # The API URL
  URL_API: ${{ secrets.URL_API }}
  CONTAINER_IMAGE: name/tag:${{ github.sha }}

jobs:
  build-and-scan:
    name: Build and Scan for Vulnerabilities and Compliance
    runs-on: ubuntu-18.04
    
    
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Set up Python 3.8  
      uses: actions/setup-python@v4
      with: 
        python-version: 3.8
    - name: Checkov
      uses: bridgecrewio/checkov-action@master    
      
    - name: SCA
      run: |
        checkov -d . --use-enforcement-rules -o cli --bc-api-key $TL_USER::$TL_PASS --prisma-api-url $URL_API --repo-id setth4u/pcs
      
    - name: Download twistcli from Prisma Cloud Console
      run: |
        curl -k -u $TL_USER:$TL_PASS --output ./twistcli $TL_CONSOLE_URL/api/v1/util/twistcli
        # ...and ensure it's executable.
        sudo chmod a+x ./twistcli
      
    - name: Build and tag the image
      run: docker build -t $CONTAINER_IMAGE .
    
    - name: Scan the image
      run: |
        # Run the scan with twistcli
        # pushing the results to the Prisma Cloud console.
        # --details returns all vulnerabilities & compliance issues rather than just summaries.
        # -address points to our Prisma Cloud console
        # -u and -p provide credentials for the console.  These creds only need the CI User role.
        # Finally, we provide the name of the image we built with 'docker build', above.
        ./twistcli images scan --details -address $TL_CONSOLE_URL -u $TL_USER -p $TL_PASS $CONTAINER_IMAGE
        # Add --vulnerability-threshold and/or --compliance-threshold to this command to
        # fail builds based on the thresholds.
        # See twistcli documentation for more details.
  
  # add any additional jobs/steps needed to test the image, push to a registry, etc.
